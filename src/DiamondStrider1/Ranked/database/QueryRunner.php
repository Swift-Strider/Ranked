<?php

/*
 * Auto-generated by libasynql-fx
 * Made from resources directory
 */

declare(strict_types=1);

namespace DiamondStrider1\Ranked\database;

use Generator;
use poggit\libasynql\DataConnector;
use SOFe\AwaitGenerator\Await;

final class QueryRunner
{
    public function __construct(private DataConnector $conn)
    {
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:85
     * - resources/db_stmts/sqlite.sql:84.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function inheritanceCreate(int $parent_id, int $child_id, ): Generator
    {
        $this->conn->executeInsert('ranked.inheritance.create', ['parent_id' => $parent_id, 'child_id' => $child_id], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:95
     * - resources/db_stmts/sqlite.sql:94.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
     */
    public function inheritanceList(): Generator
    {
        $this->conn->executeSelect('ranked.inheritance.list', [], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:92
     * - resources/db_stmts/sqlite.sql:91.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function inheritanceRemove(int $parent_id, int $child_id, ): Generator
    {
        $this->conn->executeChange('ranked.inheritance.remove', ['parent_id' => $parent_id, 'child_id' => $child_id], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:18
     * - resources/db_stmts/sqlite.sql:17.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function initInheritance(): Generator
    {
        $this->conn->executeChange('ranked.init.inheritance', [], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:28
     * - resources/db_stmts/sqlite.sql:27.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function initPermissions(): Generator
    {
        $this->conn->executeChange('ranked.init.permissions', [], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:36
     * - resources/db_stmts/sqlite.sql:35.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function initPlayers(): Generator
    {
        $this->conn->executeChange('ranked.init.players', [], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:50
     * - resources/db_stmts/sqlite.sql:49.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function initRankInstances(): Generator
    {
        $this->conn->executeChange('ranked.init.rank_instances', [], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:11
     * - resources/db_stmts/sqlite.sql:10.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function initRanks(): Generator
    {
        $this->conn->executeChange('ranked.init.ranks', [], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:120
     * - resources/db_stmts/sqlite.sql:119.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function permissionsCreate(string $permission, int $rank_id, ): Generator
    {
        $this->conn->executeChange('ranked.permissions.create', ['permission' => $permission, 'rank_id' => $rank_id], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:133
     * - resources/db_stmts/sqlite.sql:132.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
     */
    public function permissionsList(int $rank_id, ): Generator
    {
        $this->conn->executeSelect('ranked.permissions.list', ['rank_id' => $rank_id], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:127
     * - resources/db_stmts/sqlite.sql:126.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function permissionsRemove(string $permission, int $rank_id, ): Generator
    {
        $this->conn->executeChange('ranked.permissions.remove', ['permission' => $permission, 'rank_id' => $rank_id], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:143
     * - resources/db_stmts/sqlite.sql:142.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function playersCreate(string $display_name, string $player_uuid, string $username, ): Generator
    {
        $this->conn->executeChange('ranked.players.create', ['display_name' => $display_name, 'player_uuid' => $player_uuid, 'username' => $username], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:152
     * - resources/db_stmts/sqlite.sql:151.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
     */
    public function playersList(): Generator
    {
        $this->conn->executeSelect('ranked.players.list', [], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:148
     * - resources/db_stmts/sqlite.sql:147.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function playersRemove(string $player_uuid, ): Generator
    {
        $this->conn->executeChange('ranked.players.remove', ['player_uuid' => $player_uuid], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:76
     * - resources/db_stmts/sqlite.sql:75.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
     */
    public function queryPlayersOfRank(int $rank_id, ): Generator
    {
        $this->conn->executeSelect('ranked.query.players_of_rank', ['rank_id' => $rank_id], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:64
     * - resources/db_stmts/sqlite.sql:63.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
     */
    public function queryRanksOfPlayer(string $player_uuid, ): Generator
    {
        $this->conn->executeSelect('ranked.query.ranks_of_player', ['player_uuid' => $player_uuid], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:175
     * - resources/db_stmts/sqlite.sql:174.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function rankInstancesCleanExpired(string $time, ): Generator
    {
        $this->conn->executeChange('ranked.rank_instances.clean_expired', ['time' => $time], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:162
     * - resources/db_stmts/sqlite.sql:161.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function rankInstancesCreate(string $expiration_date, string $player_uuid, int $rank_id, ): Generator
    {
        $this->conn->executeChange('ranked.rank_instances.create', ['expiration_date' => $expiration_date, 'player_uuid' => $player_uuid, 'rank_id' => $rank_id], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:169
     * - resources/db_stmts/sqlite.sql:168.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function rankInstancesRemove(string $player_uuid, int $rank_id, ): Generator
    {
        $this->conn->executeChange('ranked.rank_instances.remove', ['player_uuid' => $player_uuid, 'rank_id' => $rank_id], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:103
     * - resources/db_stmts/sqlite.sql:102.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function ranksCreate(string $name, ): Generator
    {
        $this->conn->executeInsert('ranked.ranks.create', ['name' => $name], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:111
     * - resources/db_stmts/sqlite.sql:110.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, list<array<string, mixed>>>
     */
    public function ranksList(): Generator
    {
        $this->conn->executeSelect('ranked.ranks.list', [], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }

    /**
     * <h4>Declared in:</h4>
     * - resources/db_stmts/mysql.sql:108
     * - resources/db_stmts/sqlite.sql:107.
     *
     * @return Generator<mixed, 'all'|'once'|'race'|'reject'|'resolve'|array{'resolve'}|Generator<mixed, mixed, mixed, mixed>|null, mixed, int>
     */
    public function ranksRemove(int $id, ): Generator
    {
        $this->conn->executeChange('ranked.ranks.remove', ['id' => $id], yield Await::RESOLVE, yield Await::REJECT);

        return yield Await::ONCE;
    }
}
